---
apiVersion: v1
kind: ConfigMap
metadata:
  name: asterisk-config
  namespace: smarthome
data:
  # file-like keys
  pjsip.conf: |
    [udp-transport]
    type = transport
    bind = 0.0.0.0:5060
    external_signaling_address = 94.141.170.143
    external_media_address = 94.141.170.143
    ;===== Sip-Phone templates =====

    [ph-endp](!)
    type=endpoint
    language=ru
    context=phones
    direct_media=no
    rewrite_contact=no
    allow=!all,h264,alaw,ulaw
    bind_rtp_to_media_address = yes
    rtp_symmetric = no
    dtmf_mode=auto_info
    transport=udp-transport

    [ph-auth](!)
    type=auth

    [ph-aor](!)
    type=aor
    max_contacts=5
    remove_existing=yes
    qualify_frequency=30
    ;===== Sip-Phones ==============

    [100](ph-endp)
    auth=100
    aors=100
    [100](ph-auth)
    username=100
    password=oMErx6YwNedJ
    [100](ph-aor)

    [101](ph-endp)
    auth=101
    aors=101
    [101](ph-auth)
    username=101
    password=eQUa5Zk9Uica
    [101](ph-aor)

    [10001000](ph-endp)
    auth=10001000
    aors=10001000
    [10001000](ph-auth)
    username=10001000
    password=YtKs8JNcA7Kf
    [10001000](ph-aor)
    [11201](ph-endp)
    auth=11201
    aors=11201
    [11201](ph-auth)
    username=11201
    password=H7W9Gq6fr8Ph
    [11201](ph-aor)

    [11202](ph-endp)
    auth=11202
    aors=11202
    [11202](ph-auth)
    username=11202
    password=LZ2JoLiX33U9
    [11202](ph-aor)

    [11203](ph-endp)
    auth=11203
    aors=11203
    [11203](ph-auth)
    username=11203
    password=7356vE9zZTYu
    [11203](ph-aor)

    [11301](ph-endp)
    auth=11301
    aors=11301
    [11301](ph-auth)
    username=11301
    password=3f8m7zGnT6M4
    [11301](ph-aor)

    [11302](ph-endp)
    auth=11302
    aors=11302
    [11302](ph-auth)
    username=11302
    password=oVRRJVeqGrU3
    [11302](ph-aor)

    [11303](ph-endp)
    auth=11303
    aors=11303
    [11303](ph-auth)
    username=11303
    password=LuTe7Sa7pAEN
    [11303](ph-aor)

    [11401](ph-endp)
    auth=11401
    aors=11401
    [11401](ph-auth)
    username=11401
    password=HiNkB2YasuzP
    [11401](ph-aor)

    [11402](ph-endp)
    auth=11402
    aors=11402
    [11402](ph-auth)
    username=11402
    password=dhx5eJhvDtEF
    [11402](ph-aor)

    [11403](ph-endp)
    auth=11403
    aors=11403
    [11403](ph-auth)
    username=11403
    password=Ho3BaG2Hjddx
    [11403](ph-aor)

    [11501](ph-endp)
    auth=11501
    aors=11501
    [11501](ph-auth)
    username=11501
    password=uHdzAUCgDxu9
    [11501](ph-aor)

    [11502](ph-endp)
    auth=11502
    aors=11502
    [11502](ph-auth)
    username=11502
    password=5ErXE4y5CCWo
    [11502](ph-aor)

    [11503](ph-endp)
    auth=11503
    aors=11503
    [11503](ph-auth)
    username=11503
    password=AzXoLDFV3vEN
    [11503](ph-aor)

  extensions.conf: |
    [globals]

    [general]
    autofallthrough=yes

    [default]
    [domofon]
    exten => _100,1,Set(CALLERID(NUM)=115)
    same => n,Dial(PJSIP/100)
    same =>      n,Playback(telephone-number&vm-isunavail)
    same =>      n,Hangup()

    [local_calls]
    exten => _10[1-9],1,NoOp()
    same =>      n,Dial(PJSIP/${EXTEN},30)
    same =>      n,Playback(telephone-number&vm-isunavail)
    same =>      n,Hangup()
    [indoorstation115]
    exten = 10001000,1,Dial(PJSIP/10001000)
    same =>      n,Playback(telephone-number&vm-isunavail)
    same =>      n,Hangup()
    [flat112]
    exten => 112,1,Set(DIALGROUP(flat112,add)=PJSIP/11201)
    same =>   n,Set(DIALGROUP(flat112,add)=PJSIP/11202)
    same =>   n,Set(DIALGROUP(flat112,add)=PJSIP/11203)
    same =>   n,Dial(${DIALGROUP(flat112)})
    same =>      n,Hangup()
    [flat113]
    exten => 113,1,Set(DIALGROUP(flat113,add)=PJSIP/11301)
    same =>   n,Set(DIALGROUP(flat113,add)=PJSIP/11302)
    same =>   n,Set(DIALGROUP(flat113,add)=PJSIP/11303)
    same =>   n,Dial(${DIALGROUP(flat113)})
    same =>      n,Hangup()
    [flat114]
    exten => 114,1,Set(DIALGROUP(flat114,add)=PJSIP/11401)
    same =>   n,Set(DIALGROUP(flat114,add)=PJSIP/11402)
    same =>   n,Set(DIALGROUP(flat114,add)=PJSIP/11403)
    same =>   n,Dial(${DIALGROUP(flat114)})
    same =>      n,Hangup()
    [flat115]
    exten => 115,1,Set(DIALGROUP(flat115,add)=PJSIP/11501)
    same =>   n,Set(DIALGROUP(flat115,add)=PJSIP/10001000)
    same =>   n,Set(DIALGROUP(flat115,add)=PJSIP/11502)
    same =>   n,Set(DIALGROUP(flat115,add)=PJSIP/11503)
    same =>   n,Dial(${DIALGROUP(flat115)})
    same =>      n,Hangup()
    [flat11501]
    exten => 11501,1,Set(DIALGROUP(flat11501,add)=PJSIP/11501)
    same =>   n,Set(DIALGROUP(flat11501,add)=PJSIP/11502)
    same =>   n,Set(DIALGROUP(flat11501,add)=PJSIP/11503)
    same =>   n,Dial(${DIALGROUP(flat11501)})
    same =>      n,Hangup()
    [phones]
    include => local_calls
    include => flat112
    include => flat113
    include => flat114
    include => flat115
    include => flat11501
    include => indoorstation115
    include => domofon
  modules.conf: |
    ;
    ; Asterisk configuration file
    ;
    ; Module Loader configuration file
    ;

    [modules]
    autoload=yes
    ;
    ; Any modules that need to be loaded before the Asterisk core has been
    ; initialized (just after the logger has been initialized) can be loaded
    ; using 'preload'. This will frequently be needed if you wish to map all
    ; module configuration files into Realtime storage, since the Realtime
    ; driver will need to be loaded before the modules using those configuration
    ; files are initialized.
    ;
    ; An example of loading ODBC support would be:
    ;preload => res_odbc.so
    ;preload => res_config_odbc.so
    ;
    ; Uncomment the following if you wish to use the Speech Recognition API
    ;preload => res_speech.so
    ;
    ; If you want Asterisk to fail if a module does not load, then use
    ; the "require" keyword. Asterisk will exit with a status code of 2
    ; if a required module does not load.
    ;
    ; require = chan_sip.so
    ; If you want you can combine with preload
    ; preload-require = res_odbc.so
    ;
    ; If you want, load the GTK console right away.
    ;
    noload => pbx_gtkconsole.so
    ;load => pbx_gtkconsole.so
    ;
    load => res_musiconhold.so
    ;
    ; Load one of: chan_oss, alsa, or console (portaudio).
    ; By default, load chan_oss only (automatically).
    ;
    noload => chan_alsa.so
    ;noload => chan_oss.so
    noload => chan_console.so
    ;
  rtp.conf: |
    [general]
    rtpstart = 10000
    rtpend   = 10010
    strictrtp = no
  logger.conf: |
    [logfiles]
    console => notice,warning,error,dtmf,debug
