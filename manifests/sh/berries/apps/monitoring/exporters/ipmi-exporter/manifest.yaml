---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ipmi-exporter
  namespace: monitoring
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: ipmi-exporter
  template:
    metadata:
      annotations:
        configmap.reloader.stakater.com/reload: ipmi-exporter
      labels:
        app.kubernetes.io/name: ipmi-exporter
    spec:
      volumes:
        - name: ipmi-exporter
          configMap:
            name: ipmi-exporter
      containers:
        - name: ipmi-exporter
          image: prometheuscommunity/ipmi-exporter:v1.6.1
          args: [-config-file /tmp/config.yaml]
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /tmp/config.yaml
              subPath: config.yaml
              name: ipmi-exporter
          ports:
            - name: prometheus
              containerPort: 9290
              protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 50Mi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ipmi-exporter
  namespace: monitoring
data:
  config.yaml: |
    modules:
      default:
        # These settings are used if no module is specified, the
        # specified module doesn't exist, or of course if
        # module=default is specified.
        user: "default_user"
        pass: "example_pw"
        # The below settings correspond to driver-type, privilege-level, and
        # session-timeout respectively, see `man 5 freeipmi.conf` (and e.g.
        # `man 8 ipmi-sensors` for a list of driver types).
        driver: "LAN_2_0"
        privilege: "user"
        # The session timeout is in milliseconds. Note that a scrape can take up
        # to (session-timeout * #-of-collectors) milliseconds, so set the scrape
        # timeout in Prometheus accordingly.
        # Must be larger than the retransmission timeout, which defaults to 1000.
        timeout: 10000
        # Available collectors are bmc, ipmi, chassis, dcmi, sel, and sm-lan-mode
        # If _not_ specified, bmc, ipmi, chassis, and dcmi are used
        collectors:
        - bmc
        - ipmi
        - chassis
---
apiVersion: v1
kind: Service
metadata:
  name: ipmi-exporter
  namespace: monitoring
  labels:
    app.kubernetes.io/name: ipmi-exporter
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: ipmi-exporter
  ports:
    - name: prometheus
      port: 9290
      protocol: TCP
      targetPort: prometheus
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: ipmi-exporter
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: ipmi-exporter
  endpoints:
    - port: prometheus
