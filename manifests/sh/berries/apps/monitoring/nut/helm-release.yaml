---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: nut
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: network-ups-tools
      version: 6.3.3
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      # -- image repository
      repository: ghcr.io/k8s-at-home/network-ups-tools
      # -- image tag
      tag: v2.8.0
      # -- image pull policy
      pullPolicy: IfNotPresent
    controller:
      strategy: Recreate
    # -- environment variables.
    # @default -- See below
    env:
      # -- Set the container timezone
      TZ: Europe/Moscow
    strategy: Recreate
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - {key: feature.node.kubernetes.io/custom-ups, operator: In, values: ['true']}
    persistence:
      usb:
        enabled: true
        type: hostPath
        mountPath: /dev/bus/usb/001
        hostPath: /dev/bus/usb/001
        hostPathType: Directory
    securityContext:
      privileged: true
    podAnnotations:
      configmap.reloader.stakater.com/reload: nut-network-ups-tools-config
    # -- Configures service settings for the chart.
    # @default -- See values.yaml
    service:
      main:
        ports:
          http:
            enabled: false
          server:
            enabled: true
            protocol: TCP
            port: 3493

    ingress:
      # -- Enable and configure ingress settings for the chart under this key.
      # @default -- See values.yaml
      main:
        enabled: false

    config:
      # -- If set to 'values', the configuration will be read from these values.
      # Otherwise you have to mount a volume to /etc/nut containing the configuration files.
      mode: values

      # -- See https://github.com/networkupstools/nut/tree/master/conf for config sample files
      # @default -- See values.yaml
      files:
        nut.conf: |
          MODE=netserver
        upsd.conf: |
          LISTEN 0.0.0.0
        ups.conf: |
          [liebert]
            driver = usbhid-ups
            port = auto
            desc = "LIEBERT PSI 1000VA"
            vendorid = 10af
            productid = 0001
    metrics:
      # -- Enable and configure prometheus-nut-exporter sidecar and Prometheus serviceMonitor.
      # @default -- See values.yaml
      enabled: true
      serviceMonitor:
        interval: 30s
        scrapeTimeout: 10s
        labels: {}
      # -- Enable and configure Prometheus Rules for the chart under this key.
      # @default -- See values.yaml
      prometheusRule:
        enabled: false
        labels: {}
        # -- Configure additionial rules for the chart under this key.
        # @default -- See prometheusrules.yaml
        rules: []
        # - alert: UpsStatusUnknown
        #   annotations:
        #     description: UPS {{ "{{ $labels.ups }}" }} is reporting a status of unknown.
        #     summary: UPS status unknown.
        #   expr: |
        #     nut_status == 0
        #   for: 10s
        #   labels:
        #     severity: critical
      exporter:
        image:
          # -- image repository
          repository: mcfio/prometheus-nut-exporter
          # -- image tag
          tag: 1.1.1
          # -- image pull policy
          pullPolicy: IfNotPresent
        env:
          # -- metrics port
          port: 9995
          # -- log level [info|debug|trace]
          logLevel: info
