---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: jellyfin
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.0.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: 'true'
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/jellyfin
              tag: 10.8.11
            env:
              DOTNET_SYSTEM_IO_DISABLEFILELOCKING: 'true'
              JELLYFIN_FFmpeg__probesize: 50000000
              JELLYFIN_FFmpeg__analyzeduration: 50000000
              TZ: Europe/Moscow
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 8096
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 500m
                memory: 1Gi
              limits:
                memory: 16Gi
        pod:
          annotations:
            setGateway: 'true'
          enableServiceLinks: false
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [44, 105, 10000]

    service:
      main:
        type: ClusterIP
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-prod
          external-dns.alpha.kubernetes.io/target: ingress.ur30.ru
        hosts:
          - host: &host '{{ .Release.Name }}.ur30.ru'
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
            secretName: jellyfin-tls

    persistence:
      config:
        enabled: true
        existingClaim: jellyfin-config-v1
        mountPath: /config
      transcode:
        type: emptyDir
        globalMounts:
          - path: /transcode
      media:
        existingClaim: nfs-public-pvc
        globalMounts:
          - readOnly: true
