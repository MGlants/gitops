{
  "enabled": true,
  "timezone": "Europe/Moscow",
  "semanticCommits": "enabled",
  "dependencyDashboard": true,
  "prHourlyLimit": 0,
  "dependencyDashboardTitle": "Renovate Dashboard",
  "commitBody": "Signed-off-by: Mark Glants <mglants@users.noreply.github.com>",
  // Do not notify on closed unmerged PRs
  "suppressNotifications": ["prIgnoreNotification"],
  // Do not rebase PRs
  "rebaseWhen": "auto",
  "helm-values": {
    "fileMatch": ["kubernetes/.+helmrelease\\.yaml$"]
  },
  "kubernetes": {
    "fileMatch": ["kubernetes/.+\\.yaml$"],
    "ignorePaths": [
      "**/flux-system/**"
    ]
  },
  "regexManagers": [
      {
      "fileMatch": [
        "crds/.+\\.yaml$$"
      ],
      "matchStrings": [
        //crds based on helm version
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?) type=helm\n.*\/(?<currentValue>v.*?)\/"
      ],
      "datasourceTemplate": "helm"
    },
      {
      "fileMatch": [
        "crds/.+\\.yaml$$"
      ],
      "matchStrings": [
        //crds based on docker version
        "image=(?<depName>.*?) type=docker\n.*\/(?<currentValue>v.*?)\/"
      ],
      "datasourceTemplate": "docker"
    },
    {
      "fileMatch": [
        "kubernetes/.+helmrelease\\.yaml$"
      ],
      "matchStrings": [
        //helm-releases
        "registryUrl=(?<registryUrl>.*?)\n *chart: (?<depName>.*?)\n *version: (?<currentValue>.*)\n"
      ],
      "datasourceTemplate": "helm"
    },
    {
      "fileMatch": [
        "manifests/.+cluster-settings\\.yaml$"
      ],
      "matchStrings": [
        //git versioning for talos and etc/
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?( sourceUrl=(?<sourceUrl>.*?))?\\s.*?_VERSION: (?<currentValue>.*)"
      ],
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}"
    }
  ],
  "packageRules": [
    // Setup datasources
    {
      "datasources": ["helm"],
      "commitMessageTopic": "Helm chart {{depName}}"
    },
    {
      "datasources": ["docker"],
      "commitMessageTopic": "Docker image {{depName}}",
      "commitMessageExtra": "to {{#if isSingleVersion}}{{{toVersion}}}{{else}}{{{newValue}}}{{/if}}",
      "updateTypes": ["major", "minor", "patch"],
      "enabled": true
    },
    // Add labels according to package and update types
    {
      "datasources": ["docker"],
      "updateTypes": ["major"],
      "labels": ["renovate/image-release", "dependency/major"]
    },
    {
      "datasources": ["docker"],
      "updateTypes": ["minor"],
      "labels": ["renovate/image-release", "dependency/minor"]
    },
    {
      "datasources": ["docker"],
      "updateTypes": ["patch"],
      "labels": ["renovate/image-release", "dependency/patch"]
    },
    {
      "datasources": ["helm"],
      "updateTypes": ["major"],
      "labels": ["renovate/helm-release", "dependency/major"]
    },
    {
      "datasources": ["helm"],
      "updateTypes": ["minor"],
      "labels": ["renovate/helm-release", "dependency/minor"]
    },
    {
      "datasources": ["helm"],
      "updateTypes": ["patch"],
      "labels": ["renovate/helm-release", "dependency/patch"]
    },
    // Custom versions
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<compatibility>.*)$",
      "matchPackageNames": ["blakeblackshear/frigate"]
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^RELEASE\\.(?<major>\\d{4})-(?<minor>\\d{2})-(?<patch>\\d{2})",
      "matchPackageNames": ["minio/minio"]
    },
    {
      "datasources": ["docker"],
      "versionScheme": "regex:^nightly-0\\.(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$",
      "packageNames": ["hotio/readarr"]
    },
    {
      "datasources": ["docker"],
      "versioning": "loose",
      "packageNames": ["plexinc/pms-docker"]
    },
    // pin package versions
    {
      "matchDatasources": ["github-releases"],
      "allowedVersions": "<1.26.0",
      "matchPackageNames": [
        "kubernetes/kubernetes"
      ]
    },
    {
      "matchDatasources": ["docker"],
      "allowedVersions": "<14",
      "matchPackageNames": [
        "docker.io/arm64v8/postgres",
        "docker.io/bitnami/postgresql"
      ]
    },
    // group packages
    {
      "matchDatasources": ["helm", "docker"],
      "matchPackagePatterns": ["^cilium|quay.io/cilium/.*"],
      "groupName": "cilium",
      "additionalBranchPrefix": "",
      "separateMinorPatch": false
    },
    {
      "matchDatasources": ["helm", "docker"],
      "matchPackagePatterns": ["^kube-prometheus-stack|.*prometheus-operator"],
      "groupName": "prometheus-stack",
      "additionalBranchPrefix": "",
      "separateMinorPatch": false
    },
    {
      "matchDatasources": ["helm", "docker"],
      "matchPackagePatterns": ["^metallb|.*metallb.*"],
      "groupName": "metallb",
      "additionalBranchPrefix": "",
      "separateMinorPatch": false
    },
    {
      "matchDatasources": ["github-releases", "docker"],
      "matchPackagePatterns": ["siderolabs/talos|.*siderolabs/talosctl"],
      "groupName": "talos",
      "additionalBranchPrefix": "",
      "separateMinorPatch": false
    },
    {
      "matchDatasources": ["docker"],
      "matchPackagePatterns": ["^mailu/.*"],
      "groupName": "mailu",
      "additionalBranchPrefix": "",
      "separateMinorPatch": false
    },
    // auto-updates - daily
    {
      "datasources": ["docker"],
      "automerge": true,
      "requiredStatusChecks": null,
      "schedule": "after 1am and before 5am",
      "updateTypes": ["minor", "patch"],
      "packageNames": [
        "ghcr.io/home-assistant/home-assistant",
        "docker.io/esphome/esphome",
        "linuxserver/radarr",
        "linuxserver/sonarr",
        "linuxserver/nzbget",
        "docker.io/koenkk/zigbee2mqtt",
        "docker.io/plexinc/pms-docker",
        "docker.io/nodered/node-red"
      ]
    },
    // auto-updates - weekly
    {
      "datasources": ["docker"],
      "automerge": true,
      "requiredStatusChecks": null,
      "schedule": ["before 3am on Monday"],
      "updateTypes": ["minor", "patch"],
      "packageNames": [
        "linuxserver/prowlarr"
      ]
    },
    {
      "datasources": ["helm"],
      "automerge": true,
      "requiredStatusChecks": null,
      "schedule": "after 1am and before 5am",
      "updateTypes": ["minor", "patch"],
      "packageNames": [
        "grafana",
        "thanos",
        "wordrpess"
      ]
    }
  ]
}
